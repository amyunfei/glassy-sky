definitions:
  dto.CreateCategoryRequest:
    properties:
      color:
        type: string
      name:
        type: string
      parentId:
        type: string
    required:
    - color
    - name
    type: object
  dto.CreateCategoryResponse:
    properties:
      color:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      parentId:
        type: string
      updatedAt:
        type: string
    type: object
  dto.CreateLabelRequest:
    properties:
      color:
        type: string
      name:
        type: string
    required:
    - color
    - name
    type: object
  dto.CreateLabelResponse:
    properties:
      color:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  dto.CreateUserRequest:
    properties:
      code:
        type: string
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - code
    - email
    - password
    - username
    type: object
  dto.CreateUserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      nickname:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  dto.ListResponse-dto_CreateCategoryResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/dto.CreateCategoryResponse'
        type: array
    type: object
  dto.ListResponse-dto_CreateLabelResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/dto.CreateLabelResponse'
        type: array
    type: object
  dto.ListResponse-dto_CreateUserResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/dto.CreateUserResponse'
        type: array
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.ModifyCategoryRequest:
    properties:
      color:
        type: string
      id:
        type: string
      name:
        type: string
      parentId:
        type: string
    required:
    - id
    type: object
  dto.ModifyLabelRequest:
    properties:
      color:
        type: string
      id:
        type: string
      name:
        type: string
    required:
    - id
    type: object
  dto.ModifyUserRequest:
    properties:
      avatar:
        type: string
      id:
        type: string
      nickname:
        type: string
      password:
        type: string
    required:
    - id
    type: object
  dto.SuccessEmptyResponse:
    properties:
      code:
        example: 0
        type: integer
      data:
        example: ""
        type: string
      msg:
        example: success
        type: string
    type: object
  response.Body-dto_CreateCategoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.CreateCategoryResponse'
      msg:
        type: string
    type: object
  response.Body-dto_CreateLabelResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.CreateLabelResponse'
      msg:
        type: string
    type: object
  response.Body-dto_CreateUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.CreateUserResponse'
      msg:
        type: string
    type: object
  response.Body-dto_ListResponse-dto_CreateCategoryResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.ListResponse-dto_CreateCategoryResponse'
      msg:
        type: string
    type: object
  response.Body-dto_ListResponse-dto_CreateLabelResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.ListResponse-dto_CreateLabelResponse'
      msg:
        type: string
    type: object
  response.Body-dto_ListResponse-dto_CreateUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.ListResponse-dto_CreateUserResponse'
      msg:
        type: string
    type: object
  response.Body-string:
    properties:
      code:
        type: integer
      data:
        type: string
      msg:
        type: string
    type: object
info:
  contact: {}
  title: Glassy Sky API
paths:
  /category:
    get:
      parameters:
      - in: query
        name: current
        required: true
        type: integer
      - in: query
        name: size
        required: true
        type: integer
      - in: query
        name: name
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_ListResponse-dto_CreateCategoryResponse'
      security:
      - ApiKeyAuth: []
      summary: 分页查询分类
      tags:
      - 分类信息
    post:
      parameters:
      - description: 分类信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCategoryRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_CreateCategoryResponse'
      summary: 创建分类
      tags:
      - 分类信息
  /category/{id}:
    delete:
      parameters:
      - description: 分类id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessEmptyResponse'
      summary: 删除分类
      tags:
      - 分类信息
    put:
      parameters:
      - description: 分类信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ModifyCategoryRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_CreateCategoryResponse'
      summary: 修改分类
      tags:
      - 分类信息
  /label:
    get:
      parameters:
      - in: query
        name: current
        required: true
        type: integer
      - in: query
        name: size
        required: true
        type: integer
      - in: query
        name: name
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_ListResponse-dto_CreateLabelResponse'
      summary: 分页查询标签
      tags:
      - 标签信息
    post:
      parameters:
      - description: 标签信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateLabelRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_CreateLabelResponse'
      summary: 创建标签
      tags:
      - 标签信息
  /label/{id}:
    delete:
      parameters:
      - description: 标签id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessEmptyResponse'
      summary: 删除标签
      tags:
      - 标签信息
    put:
      parameters:
      - description: 标签信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.ModifyLabelRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_CreateLabelResponse'
      summary: 修改标签
      tags:
      - 标签信息
  /user:
    get:
      parameters:
      - in: query
        name: current
        required: true
        type: integer
      - in: query
        name: size
        required: true
        type: integer
      - in: query
        name: nickname
        type: string
      - in: query
        name: username
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_ListResponse-dto_CreateUserResponse'
      summary: 分页查询用户
      tags:
      - 用户信息
  /user/{id}:
    put:
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ModifyUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_CreateUserResponse'
      summary: 修改用户信息
      tags:
      - 用户信息
  /user/email-code/{email}:
    get:
      parameters:
      - description: 邮箱地址
        in: path
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessEmptyResponse'
      summary: 发送邮箱验证码
      tags:
      - 用户信息
  /user/email-verify/{email}:
    get:
      parameters:
      - description: 邮箱地址
        in: path
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessEmptyResponse'
      summary: 验证邮箱可用
      tags:
      - 用户信息
  /user/login:
    post:
      parameters:
      - description: 登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-string'
      summary: 登录
      tags:
      - 用户信息
  /user/register:
    post:
      parameters:
      - description: 用户注册信息
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Body-dto_CreateUserResponse'
      summary: 注册用户
      tags:
      - 用户信息
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
